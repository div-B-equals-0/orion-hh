* HH 529-II,III reply to referee

** Re-derive the shock jump conditions
+ I am having doubts about whether to use the adiabatic or isothermal sound speed.
+ The shock adiabat is given by
  \[
  \frac{\gamma}{\gamma - 1} (P_2 v_2 - P_1 v_1) = 0.5 (v_1 + v_2) (P_2 - P_1)
  \]
+ But where v_1, v_2 are specific volumes = 1/\rho
+ c_s = (\gamma P / \rho)^{1/2}
+ P = n k T = \rho c_s^2 / \gamma = (R/\mu) \rho T
+ c_s^2 = \gamma P V
*** Working through Zel'dovich & Raizer
+ The whole chapter is available in Google Books
  + Again, V = 1/\rho is specific volume
+ upstream velocity
  + u_0^2 = V_0^2 (p_1 - p_0) / (V_0 - V_1)
+ post-shock velocity
  + u_1^2 = V_1^2 (p_1 - p_0) / (V_0 - V_1)

*** Using stuff from Wikipedia
+ The page on [[https://en.wikipedia.org/wiki/Normal_shock_tables][Normal shock tables]] is useful
  + Except M_1, M_2 on that page are M_0, M_1 in our notation
+ They have (in my notation)
  \[
  M_1^2 = \frac{(\gamma - 1) M_0^2 + 2} {2\gamma M_0^2 - (\gamma - 1)}
  \]
+ Which for \gamma = 5/3 yields
  \[
  M_1^2 = \frac{M_0^2 + 3} {5 M_0^2 - 1}
  \]
+ Which is the same as I had before, so this is clearly the adiabatic Mach number
+ For T_1/T_0 we have dependence on
  + G1 \equiv (\gamma-1)/2 = 1/3
  + G2 \equiv 2\gamma/(\gamma-1) = 5
  + 1/(G1 + G2) = 3/16
    \[
    \frac{T_1}{T_0} = (1 + G1 M^2_0) (G2 - M_0^{-2}) / (G1 + G2)
    \]
  + For \gamma=5/3 this gives T_1/T_0 = (3 + M_0^2) (5 - 1/M_0^2) / 16
    + Put M_0 = 1 + x
      + M_0^2 = 1 + 2 x
      + 1/M_0^2 = 1 - 2x
      + (3 + M_0^2) (5 - 1/M_0^2) / 16 = (4 + 2x) (4 + 2x) /16
        = (16 + 16 x) / 16 = 1 + x = M_0
    + Or just multiply out:
      + (15 + 5M^2 - 3/M^2 - 1)/16
      + No, that does not help
 
  


*** So what does that mean for the rest of it?
+ Just that the isothermal Mach number is sqrt(\gamma) = 1.291 times larger than the adiabatic Mach number.
+ So the post-shock density is the same: n_1/n_0 = 4 M_0^2 / (M_0^2 + 3)
+ But the post-cooling density is higher n_2/n_0 = \gamma M_0^2 = 5 M_0^2 / 3
+ Repeat the table, but with adiabatic Mach number
  |   M_0 | T_1/T_0 | n_1/n_0 |  n_2/n_0 |  h/r |  H/r |
  |------+-------+-------+--------+------+------|
  | 1.01 |  1.01 |  1.01 |   1.70 | 0.38 | 0.50 |
  |  1.1 |  1.10 |  1.15 |   2.02 | 0.35 | 0.46 |
  |  1.2 |  1.19 |  1.30 |   2.40 | 0.32 | 0.42 |
  |  1.5 |  1.49 |  1.71 |   3.75 | 0.26 | 0.36 |
  |  2.0 |  2.08 |  2.29 |   6.67 | 0.19 | 0.30 |
  |  3.0 |  3.67 |  3.00 |  15.00 | 0.13 | 0.26 |
  |  4.0 |  5.86 |  3.37 |  26.67 | 0.10 | 0.25 |
  |  6.0 | 12.12 |  3.69 |  60.00 | 0.06 | 0.23 |
  |  8.0 | 20.87 |  3.82 | 106.67 | 0.05 | 0.23 |
  | 10.0 | 32.12 |  3.88 | 166.67 | 0.04 | 0.23 |
  #+TBLFM: $2=(3 + $1**2) (5 - 1/$1**2)/16;f2::$3=4 $1**2/($1**2 + 3);f2::$4=5 $1**2 / 3;f2::$5=0.5 / $1 sqrt(5/3) ;f2::$6=0.5 $1 / $3 sqrt($2) ;f2


*** Working out the thickness of the equilibrium shocked layer
+ Assume a steady state, where gas flows out sideways at a fraction \eta of the isothermal sound speed
  + Mdot in = \pi r^2 n_0 m M_0 c_s
  + Mdot out = 2 \pi r h n_2 m \eta c_s / \gamma^{1/2}
  + h/r = (1/2) n_0 M_0 \gamma^{1/2} / n_2 \eta = 1 / 2 M_0 \gamma^{1/2} \eta
  + This is given above
+ Version with no cooling, H
  + If there is no cooling, then we need to use n_1 for the density, but the speed will be higher by a factor of sqrt(T_1/T_0)
  + Mdot out = 2 \pi r h n_1 m \eta c_s sqrt(T_1/T_0)
  + H/r = (1/2) n_0 M_0 / n_1 sqrt(T_1/T_0) \eta
*** The cooling length vs the shell thickness
+ Apparently this is 3 u_1 k (T_1 - T_0) / n_1 [\Lambda(T_1) - \Gamma(T_1)]
  + Note that I changed T_1 to (T_1 - T_0) since we only need to get down to the equilibrium T, not to zero
+

#+begin_src python :return tab
  import numpy as np
  from matplotlib import pyplot as plt
  import seaborn as sns
  sns.set_color_codes("deep")

  figfile = "cooling-length.pdf"

  T0 = 8500
  CS = 13.7
  ARCSEC = 410 * 1.49597870691e13
  R = 1.63 # outflow radius in arcsec (GIVES 1e16 cm)
  MU_E = 1.24                     # Mean mass per electron
  M_H = 1.67262158e-24            # Hydrogen mass

  # Mach number
  mach = np.array([
      1.01, 1.1, 1.2, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 5.5,
      6.0, 7.0, 8.0, 9.0, 10.0, 12.0,
      15.0, 20.0
  ])
  # pre-shock velocity
  v0 = mach*CS
  # initial compression ratio
  n1_n0 = 4*mach**2 / (mach**2 + 3)
  # initial post-shock velocity
  v1 = v0 / n1_n0
  # post-shock temperature ratio
  T1_T0 = (3 + mach**2) * (5 - 1/mach**2) / 16
  # Cooling
  Lam1 = 3.3e-24 * (T1_T0 * T0 / 1e4)**2.3
  Lam2 = 1e-20 / (T1_T0 * T0 / 1e4)
  k = 3
  Lambda = (Lam1**(-k) + Lam2**(-k))**(-1/k)
  Gamma = (T0/1e4)**2.8 * 3.3e-24 / np.sqrt(T1_T0 * T0 / 1e4)
  Lambda_0 = 3.3e-24 * (T0 / 1e4)**2.3

  # Final compression
  n2_n0 = (5./3.) * mach**2

  n2 = 1e4
  n0 = n2 / n2_n0
  n1 = n0 * n1_n0

  # Cooling length in cm
  dcool = 3*(1e5 * v1) * 1.3806503e-16 * (T1_T0 - 1.0)*T0 / (n1 * (Lambda - Gamma))
  # shell thickness in cm
  h = R*ARCSEC / (mach * 2 * np.sqrt(5./3.))
  # alternative shell thickness if cooling inefficient
  H =  R*ARCSEC * mach / (2 * T1_T0**0.5 * n1_n0)

  # KE flux through shock
  ke_flux = 0.5 * MU_E * M_H * n0 * (v0 * 1e5)**3
  # Radiative flux from shell
  shell_flux = n2**2 * h * Lambda_0
  # Radiative flux from cooling zone
  cool_flux = n1**2 * np.minimum(dcool, H) * Lambda
  data = {
      "M_0" : mach,
      "u_0" : np.round(v0, 1),
      "u_1" : np.round(v1, 1),
      "u_2" : np.round(v0/n2_n0, 1),
      "T_1" : np.round(T1_T0*T0/1000, 1),
      "d_cool": np.round(dcool/ARCSEC, 3),
      "h": np.round(h/ARCSEC, 3),
      "H": np.round(H/ARCSEC, 3),
      "n_0":  np.round(n0),
      "n_1":  np.round(n1),
      # "n_2":  np.round(n2*np.ones_like(n0)),
      "shock/shell": np.round(ke_flux / shell_flux, 4),
      "cool/shell": np.round(cool_flux / shell_flux, 4),
  }

  tab = [list(data.keys()), None] + list(zip(*data.values()))
#+end_src

#+RESULTS:
|   M_0 |    u_0 |   u_1 |  u_2 |     T_1 |  d_cool |     h |     H |     n_0 |     n_1 | shock/shell | cool/shell |
|------+-------+------+-----+--------+--------+-------+-------+--------+--------+-------------+------------|
| 1.01 |  13.8 | 13.6 | 8.1 |    8.6 |  0.021 | 0.625 | 0.807 | 5882.0 | 5970.0 |      0.0186 |      0.012 |
|  1.1 |  15.1 | 13.1 | 7.5 |    9.3 |   0.02 | 0.574 | 0.744 | 4959.0 | 5701.0 |       0.022 |      0.014 |
|  1.2 |  16.4 | 12.7 | 6.8 |   10.2 |   0.02 | 0.526 |  0.69 | 4167.0 | 5405.0 |      0.0262 |     0.0163 |
|  1.5 |  20.5 | 12.0 | 5.5 |   12.7 |  0.019 | 0.421 | 0.583 | 2667.0 | 4571.0 |      0.0409 |     0.0241 |
|  2.0 |  27.4 | 12.0 | 4.1 |   17.7 |   0.02 | 0.316 | 0.495 | 1500.0 | 3429.0 |      0.0728 |     0.0407 |
|  2.5 |  34.2 | 12.7 | 3.3 |   23.8 |  0.022 | 0.253 | 0.451 |  960.0 | 2595.0 |      0.1137 |     0.0627 |
|  3.0 |  41.1 | 13.7 | 2.7 |   31.2 |  0.024 |  0.21 | 0.426 |  667.0 | 2000.0 |      0.1638 |     0.0901 |
|  3.5 |  47.9 | 14.9 | 2.3 |   39.8 |  0.026 |  0.18 |  0.41 |  490.0 | 1574.0 |      0.2229 |      0.123 |
|  4.0 |  54.8 | 16.3 | 2.1 |   49.8 |  0.027 | 0.158 |   0.4 |  375.0 | 1263.0 |      0.2911 |     0.1612 |
|  4.5 |  61.6 | 17.7 | 1.8 |   61.1 |  0.029 |  0.14 | 0.392 |  296.0 | 1032.0 |      0.3685 |     0.2047 |
|  5.0 |  68.5 | 19.2 | 1.6 |   73.8 |   0.03 | 0.126 | 0.387 |  240.0 |  857.0 |      0.4549 |     0.2534 |
|  5.5 |  75.4 | 20.7 | 1.5 |   87.7 |  0.032 | 0.115 | 0.383 |  198.0 |  722.0 |      0.5504 |     0.3073 |
|  6.0 |  82.2 | 22.3 | 1.4 |  103.0 |  0.037 | 0.105 |  0.38 |  167.0 |  615.0 |      0.6551 |     0.3664 |
|  7.0 |  95.9 | 25.4 | 1.2 |  137.6 |  0.069 |  0.09 | 0.376 |  122.0 |  462.0 |      0.8916 |     0.5002 |
|  8.0 | 109.6 | 28.7 | 1.0 |  177.4 |  0.163 | 0.079 | 0.374 |   94.0 |  358.0 |      1.1646 |     0.6546 |
|  9.0 | 123.3 | 32.0 | 0.9 |  222.6 |  0.361 |  0.07 | 0.372 |   74.0 |  286.0 |      1.4739 |     0.8298 |
| 10.0 | 137.0 | 35.3 | 0.8 |  273.0 |  0.739 | 0.063 |  0.37 |   60.0 |  233.0 |      1.8196 |     0.5136 |
| 12.0 | 164.4 | 42.0 | 0.7 |  389.9 |  2.584 | 0.053 | 0.369 |   42.0 |  163.0 |      2.6203 |     0.2109 |
| 15.0 | 205.5 | 52.1 | 0.5 |  605.1 | 12.076 | 0.042 | 0.367 |   27.0 |  105.0 |      4.0942 |     0.0703 |
| 20.0 | 274.0 | 69.0 | 0.4 | 1069.9 | 89.067 | 0.032 | 0.366 |   15.0 |   60.0 |      7.2785 |     0.0169 |
*** Interpretation of the above table
+ The cooling length is remarkably constant for the low-velocity shocks
  + Up to Mach number of 6: about 80 km/s
  + That is the point where we get the minimum shell thickness: h + d_cool = 0.1 arcsec
  + This is for R = 1 arcsec, so relative thickness is about 10%
+ For faster shocks
** Insights from the JaneWR shock models
+ These are for shocks between 68 and 153 km/s
+ They are matched to the same value of n_2 when it has cooled back down to the equilibrium T
+ In all cases, the [O III] comes from the part of the cooling zone where 10 kK < T < 40 kK, which is just before it gets back to the equilibrium T
+ The summed [O III] emission from the cooling zone is higher in the slower shocks
+ This is because the gas has a slower exhaust for higher Mach number shocks M \to 1/M
  + And so the cooling layer is thinner for the higher-M shocks  because dx \approx u_2 t_cool
  + I thought there was something else going on too, but that is just because I had not put the distances in physical units properly - all sorted now
+ The post-shock T exceeds 20,000 K for M = 2.3 => u_0 \approx 30 km/s
+ It exceeds 40,000 K for M = 3.5 => u_0 \approx 50 km/s
+ So this will give the following regimes
  1. u_0 < 30 km/s (T_1 = 10 \to 20,000 K)
     - [O III] from all the cooling zone
     - Relative contribution to [O III] = shock/shell \propto M^2 (climbs to about 10%)
  2. 30 < u_0 < 50 km/s (T_1 = 20 \to 50,000 K)
     - All of cooling zone still emits [O III], but it starts to be a smaller fraction
     - Other coolants, such as C III, N III, C IV become more important (UV lines)
     - Relative contribution to [O III] has a maximum at about 50 km/s of about 15%
  3. 50 < u_0 < 120 km/s (T_1 = 50 \to 200,000 K)
     - Cooling predominantly from He II
       - That is what the Cloudy output files seem to be saying, but that seems prima facie unlikely
     - 
** Shock versus shell emission
+ This is what we implement above in the python program
+ Shock emission
  \[
  F_{\text{shock}} = 0.5 \rho_0 u_0^3
  \]
+ Shell emission
  \[
  F_{\text{shell}} = (\rho_2 / \mu m_{\text{H}} )^2 \Lambda_0 h
  \]
+ With
  + \(h = 0.387 R / \eta M\)
  + (\rho_0 = \rho_2 / \gamma M^2)
  + \(u_0 = M c_s\)
+ Working
  + F_1 = 0.5 \rho_2 M^3 c_s^3 / \gamma M^2 = 0.3 \rho_2 M c_s^3
  + F_2 = (\rho_2^2 R / M) 0.387 \Lambda_0 / \eta (\mu m_H)^2
  + F_1/F_2 = 0.775 M^2 c_s^3 \eta \mu m_h /(n_2 R \Lambda_0)
  + Check units:
    + Numerator: (cm/s)^3 g = g cm^3 s^-3
    + Denominator: cm^-3 cm erg cm^3 s^-1
      + erg = g cm^2 s^-2
      + => cm g cm^2 s^-2 s^-1 = g cm^3 s^-3
+ Typical values:
  + n_2 = 10,000 pcc
  + R = 1 arcsec = 6e15 cm, but take 1e16 instead
  + \Lambda_0 = 2.3e-24
  + c_s = 13.7e5 cm/s
  + \mu = 0.62
    + *NO* This \mu is different from the mean mass per particle
    + It should be the mean mass per electron, which is \mu_e = (1 + 4 y)/(1 + y) = 2\mu if He is singly ionized
    + For y = 0.087 this gives \mu_e = 1.24
  + F_1/F_2 = 0.018 M^2 \eta (n_2 / 1e4 pcc)^-1 (R / 1e16 pcc)^-1 (\Lambda_0 / 2.3e-24)^{-1}
+ So the ratio is
  \[
  \frac{F_{\text{shock}}}{F_{\text{shell}}}
  = 0.018 M^2
  \left( \frac{n_2}{\SI{1e4}{cm^{-3}}} \right)^{-1}
  \left( \frac{R}{\SI{1e16}{cm}} \right)^{-1}
  \left( \frac{\Lambda_0}{\SI{2.3e-24}{erg.cm^3.s^{-1}}} \right)^{-1}
  \]

*** F_1/F_2 values for II and III
+ We have F_1/F_2 = 0.027 M^2 (n_2 / 1e4 pcc)^-1 (R / 1e16 pcc)^-1
+ But we really need to combine the two shocks in the working surface, say A and B
  + We want (F1A + F1B) / (F2A + F2B)
  + (F1A / F2A + (F1B / F2B) (F2B / F2A)) / (1 + F2B / F2A)
  + F2B / F2A = HB/HA
  + F1/F2 = (F1/F2)_A + (HB/HA) (F1/F2)_B / (1 + HB/HA)
+ Table of the 4 shocks (s1, s2 are A, B)
  | Shock  |  V |   M | H/rj |   n2 | F1/F2 |
  |--------+----+-----+------+------+-------|
  | II s1  | 19 | 1.4 | 0.59 | 1.19 |  0.07 |
  | II s2  | 28 | 2.0 | 0.41 | 1.19 |  0.15 |
  | III s1 | 70 | 5.1 | 0.16 | 3.02 |  0.38 |
  | III s2 | 57 | 4.2 | 0.20 | 3.02 |  0.26 |
  #+TBLFM: $3=$2/13.7;f1::$4=0.5 sqrt(exp(1)) / $3;f2::$6=0.027 $3**2 / 0.617 $5; f2
+ So,
  + II:
    + HB/HA = 0.41/0.59 = 0.695
    + F1/F2 = (0.07 + 0.695 0.15) / (1 + 0.695) = 0.103
  + III:
    + HB/HA = 1.25
    + F1/F2 = (0.38 + 1.25 0.26) / (1 + 1.25) = 0.313



*** F_1/F_2 for the [O III] 5007 line
+ From the [[file:~/Dropbox/shock-cloudy/][file:~/Dropbox/shock-cloudy/]] project, we find the following for the fractional contribution of [O III] 5007 to the total emission in the cooling zone: ~f(5007)~ in table below
+ We also calculate the Mach number, and the F_1/F_2 assuming n_2 = 1e4 pcc and R = 3.24 mpc (1e16 cm)
+ Then we multiply them together and divide by 0.33, which is the 5007 fraction for the nebula gas
  |   V | f(5007) |    M | F_1/F_2 TOT | F_1/F_2 5007 | T_5007 |      T_1 |
  |-----+---------+------+-----------+------------+-------+---------|
  |  17 |   0.362 | 1.24 |     0.042 |      0.046 |  9600 |  10485. |
  |  19 |   0.371 | 1.39 |     0.052 |      0.058 | 10300 |  11745. |
  |  24 |   0.368 | 1.75 |     0.083 |      0.093 | 11400 |  15052. |
  |  28 |   0.352 | 2.04 |     0.112 |      0.119 | 12300 |  18109. |
  |  34 |   0.310 | 2.48 |     0.166 |      0.156 | 13500 |  23515. |
  |  39 |   0.272 | 2.85 |     0.219 |      0.181 | 14400 |  28817. |
  |  48 |   0.211 | 3.50 |     0.331 |      0.212 | 15400 |  39846. |
  |  61 |   0.143 | 4.45 |     0.535 |      0.232 | 16500 |  59957. |
  |  75 |   0.100 | 5.47 |     0.808 |      0.245 | 16700 |  86862. |
  | 106 |   0.056 | 7.74 |     1.618 |      0.275 | 16600 | 166540. |
  #+TBLFM: $3=$1 / 13.7;f2::$4=0.027 $3**2;f3::$5=$2 $4 / 0.33;f3::$7=8500 (3 + $3**2) (5 - 1/$3**2)/16 ; f0
+ So the F_1/F_2 fractions need to be multiplied by
  + II: 1.36
  + III: 0.54
+ This gives final values
  | Shock  |  V |   M | H/r_j |   n_2 | F_1/F_2 5007 | T 5007 |
  |--------+----+-----+------+------+------------+--------|
  | II s1  | 19 | 1.4 | 0.59 | 1.19 |      0.079 |  10300 |
  | II s2  | 28 | 2.0 | 0.41 | 1.19 |      0.162 |  12300 |
  | III s1 | 70 | 5.1 | 0.16 | 3.02 |      0.130 |  16500 |
  | III s2 | 57 | 4.2 | 0.20 | 3.02 |      0.124 |  16200 |
+ Conclusion is that F_1/F_2 5007 is about 0.1 for both working surfaces
+ Note that T_5007 is the mean T weighted by 5007 emissivity in the cooling zone
*** Estimating t^2 for the shock plus shell
+ Set \phi = F_1/F_2 (5007)
+ Then mean temperature is T_0 = (T_neb + \phi T_5007) / (1 + \phi)
+ t^2 is [(T_neb - T_0)^2 + \phi (T_5007 - T_0)^2] / T_0^2 (1 + \phi)
  | Shock  |     \phi | T 5007 | T_neb |    T_0 |          t^2 |
  |--------+-------+--------+------+-------+-------------|
  | II s1  | 0.079 |  10300 | 8500 | 8632. |      0.0030 |
  | II s2  | 0.162 |  12300 | 8500 | 9030. |      0.0212 |
  | III s1 | 0.130 |  16500 | 8500 | 9420. |      0.0734 |
  | III s2 | 0.124 |  16200 | 8500 | 9349. |      0.0666 |
  #+TBLFM: $5=($4 + $2 $3)/(1 + $2);f0::$6=(($4 - $5)**2 + $2 ($3 - $5)**2) / ($5**2 (1 + $2)) ; f4

** Excitation temperatures of lines

+ k T = h c / \lambda
+ 5007 \AA : 29168 K
+ 4363 \AA : 62134 K
+ Data from Atomic Line List

** Line profiles following HRH87
+ HRH use \phi as inclination of axis to line of sight
  + In our paper, we use an angle with the plane of sky: i = 90 - \phi
  + so cos \phi = sin i
+ They are treating a shocked cloudlet model
  + This cannot apply in Orion, since a dense cloudlet would be very visible
  + Nonetheless, their treatment of the bow shock should be fine
+ Also they are considering equilibrium pre-ionization
  + This is different from our case of total pre-ionization
+ They calculate the extrema of the of the bow velocities
  + V+ = 0.5 V_s (1 + cos \phi) + \gamma
  + V- = -0.5 V_s (1 - cos \phi) + \gamma
+ \gamma is the projected LOS velocity of the "obstacle", which in our case is the working surface
+ V_s is the shock velocity on the axis of the bow
  + This is V_s1 or V_s2
  + *But* the model does not apply so much to the jet shock since it is planar, not a bow shock
    + In the WS frame, the streamlines have to bend round through more than 90 degrees
+ So \gamma = -V_ws cos \phi
+ So we have
  + FWZI = V+ - V- = V_s
  + Median velocity: V_med = (V+ + V-) / 2 = 0.5 V_s cos \phi + \gamma
  + Or in our notation: V_med = 0.5 V_s sin i - V_ws sin i = -(V_ws - V_s/2) sin i
  + Most negative velocity is V- = -0.5 V_s (1 - sin i) - V_ws sin i = -V_s/2  - (V_ws - V_s/2) sin i
  + Most positive velocity is V+ = 0.5 V_s (1 + sin i) - V_ws sin i = +V_s/2  - (V_ws - V_s/2) sin i
  + Or to put it more succinctly, the span of velocities is V = V_med \pm V_s/2
  + If we have a terminal bow, then V_WS = V_s, in which case:
    + V_med = -0.5 V_ws sin i 
    + V- = -0.5 V_ws (1 + sin i) 
+ However, it is very hard to measure V_med observationally, since the profile is probably double-peaked, but the lower-velocity peak is buried in the nebular emission.
+ It is probably easier to measure V-
  + We could take the 10% level on the blue side
*** How to deduce inclination
+ Assume that we measure V- and V_pos from proper motions
  + V_pos = V_Ws cos i
  + V- = -0.5 V_ws (1 + sin i)
+ How to find inclination in terms of ratio of these velocities
  + X \equiv -V-/V_pos = 0.5 (1 + sin i) / cos i
  + X = (sec i + tan i) / 2
  + Put t \equiv tan i
  + 2 X = sqrt(1 + t^2) + t
  + (2 X - t)^2 = 1 + t^2 = 4 X^2 - 4 X t + t^2
  + 4 X t = 4 X^2 - 1
  + t = X - 1/(4 X)
+ Observations of HH 529 III
  + V_pos = 36 (a2) or 30 (b1), so 33 +/- 3
  + V- = -50 (heliocentric), -78 +/- 2 wrt OMC
  + => X = 78 +/- 2 / 33 +/- 3 = 2.364 +/- 0.223
  + tan i = (2.364 +/- 0.223) - 0.25/(2.364 +/- 0.223) = 2.258 +/- 0.223
  + => i = 66 +/- 2
  + => V_ws = (33 +/- 3) / cos (66 +/- 2) = 81 +/- 10
+ Compare with the bullet approximation
  + V = -25 (heliocentric), -53 +/- 2 wrt OMC
  + tan i = (53 +/- 2) / (33 +/- 3) = 1.606 +/- 0.158
  + i = 58.09 +/- 2.53
  + V_WS = 62.43 +/- 2.32
*** Values of \alpha for min and max velocity
+ 
    
** Parameters of the HH 529 II and III shocks
+ There are two possibilities for the shocks
  1. They may be propagating into the nebula
  2. They may be internal working surfaces in the jet beam
+ From HH 529 III we get a total speed of hypot(35, 57) = 67 km/s at an inclination of 60 deg from the plane of the sky
+ From HH 529 II, we have
  | comp | Vr       | Vt       | V            | i            |
  |------+----------+----------+--------------+--------------|
  | II a | 50 +/- 5 | 21 +/- 9 | 54.2 +/- 5.8 | 67.2 +/- 9.0 |
  | II b | 57 +/- 5 | 26 +/- 5 | 62.6 +/- 5.0 | 65.5 +/- 4.6 |
  #+TBLFM: $4=sqrt($2**2 + $3**2);f1::$5=arctan($2/$3);f1
+ These are consistent with what is in the paper: about 60 km/s for HH 529 II





*** Post-shock temperature and density
\[
T = \frac{3 \mu m_p}{16 k} V^2 
\]

|  V |   \Delta T |   M^2 |
|----+-------+------|
| 20 | 5.9e3 |  2.8 |
| 30 | 1.3e4 |  6.3 |
| 40 | 2.4e4 | 11.1 |
| 50 | 3.7e4 | 17.4 |
| 60 | 5.3e4 |   25 |
| 70 | 7.2e4 | 34.0 |
| 80 | 9.4e4 | 44.4 |
| 90 | 1.2e5 | 56.3 |
#+TBLFM: $2=3 0.5 1.3 $mp ($1 $km)**2 / 16 $k ; s2::$3=($1/12)**2 ; f1

So, on the assumption of a terminal bow shock, we get a Mach number of around 5 to 6 and a post-shock T of around 60,000 K, with a compression factor of 30

For an internal working surface, such as for HH 529-II, the \alpha ratio should be of order unity, whereas \beta is probably \ge 0.5.  If we take \alpha = 1, and \beta = 0.5, then the inner and outer shock velocities are 1/3 of the WS velocity, so about 20 km/s: M = 2.

This is consistent with the relatively small velocity width of the HH 529 II profile. 

Compare with
\[
c^2 = k T_0 / \mu m_H \Rightarrow T_0 = \mu m_H c^2 / k 
\]
so that
\[
\frac{T}{T_0} = 1 + \frac{3}{16} M^2
\]

*** 

*** Mach angle
+ Compare width with distance from source (in Orion S?)
+ This can give a Mach angle, which could restrict the jet velocity
+ Except that hoop stresses in a magnetized jet could keep it from expanding
*** Different velocities
+ Ambient velocity V_a
+ Jet velocity V_j
+ Working surface velocity V_ws
+ V_j > V_ws > V_a
+ n_a (V_ws - V_a)^2 = n_j (V_j - V_ws)^2 = n_ws c_0^2
+ Put \alpha = n_j / n_a
+ put \beta = V_a / V_j
+ put u = V_ws / V_j
+ n_a V_j^2 (u - \beta)^2 = \alpha n_a V_j^2 (1 - u)^2
  + (u - \beta)^2 = \alpha (1 - u)^2
  + u^2 - 2\beta u + \beta^2 = \alpha - 2\alpha u + \alpha u^2
  + (1 - \alpha) u^2 + 2(\alpha - \beta) u + (\beta^2 - \alpha) = 0
+ u = [-2(\alpha - \beta) \pm sqrt(4(\alpha - \beta)^2 - 4 (1 - \alpha) (\beta^2 - \alpha))] / 2 (1 - \alpha)
  + u = [-(\alpha - \beta) \pm sqrt(\alpha^2 - 2\alpha\beta + \beta^2 - \beta^2 + \alpha + \alpha\beta^2 - \alpha^2) ] / (1 - \alpha)
  + u = [-(\alpha - \beta) \pm (1 - \beta) sqrt(\alpha) ] / (1 - \alpha)
  + u = [(1 - \beta) \alpha^{1/2} - (\alpha - \beta)] / (1 - \alpha)
+ [X] *try again with added sound speed*
  + n_a [(V_ws - V_a)^2 + c_0^2/\gamma] = n_j [(V_j - V_ws)^2 + c_0^2/\gamma] = n_ws c_0^2/\gamma
  + same but use M = V_j/c_0
    + Although actually, what is observed is Mach number of the WS, which is M = u V_j/c_0
    + So, we divide through by n_a V_j^2, using c_0^2/\gamma V_j^2 = u^2/\gamma M^2
    + /From now on, I write M^2 instead of \gamma M^2, so M is the isothermal Mach number/
  + (u - \beta)^2 + u^2/M^2 = \alpha [(1 - u)^2 + u^2/M^2]
  + u^2 - 2\beta u + \beta^2 + u^2/M^2 = \alpha - 2\alpha u + \alpha u^2 + \alpha u^2/M^2
  + (1 - \alpha) (1 + 1/M^2) u^2 + 2(\alpha - \beta) u + (\beta^2 - \alpha) = 0
  + u = [-(\alpha - \beta) \pm sqrt(\alpha^2 - 2\alpha\beta + \beta^2 + (-\beta^2 + \alpha + \alpha\beta^2 - \alpha^2) (1 + 1/M^2)) ] / (1 - \alpha) (1 + 1/M^2)
  + u = [-(\alpha - \beta) \pm sqrt(\alpha (1 - \beta)^2 - (1 - \alpha) (\beta^2 - \alpha) / M^2)] / [(1 - \alpha) (1 + 1/M^2)]
  + u = [sqrt(\alpha (1 - \beta)^2 - (1 - \alpha) (\beta^2 - \alpha) / M^2) - (\alpha - \beta)] / [(1 - \alpha) (1 + 1/M^2)]
  + /check what happens for \beta = 0/
    + This is a simpler case and will let us see why there is no apparent solution for high \alpha
    + n_a [V_ws^2 + c_0^2] = n_j [(V_j - V_ws)^2 + c_0^2] = n_ws c_0^2
    + u^2 (1 + 1/M^2) = \alpha [(1 - u)^2 + u^2/M^2]
    + \alpha = u^2 (1 + 1/M^2) /  [(1 - u)^2 + u^2/M^2]
      + Put u = 1 => \alpha = (M^2 + 1)
    + *Mow I have the answer* For larger density contrasts than this, the thermal pressure of the jet cannot be balanced by any ram pressure of the environment
    + So the maximum \alpha for general \beta is given by
      + \alpha = 1 + (1 - \beta)^2 M^2 
+ Special case of \alpha = 1
  + This is singular, so do an expansion:
    + \alpha = 1 + \varepsilon
    + u = [(1 - \beta) (1 + 0.5\varepsilon) - (1 - \beta) - \varepsilon] / (-\varepsilon)
    + u = [1 - 0.5 (1 - \beta)] = 0.5 (1 + \beta)
    + Same as using l'Hôpital's rule
    + V_1s / V_WS = (1 - \beta) / (1 + \beta)
    + V_2s / V_WS = (1 - \beta) / (1 + \beta)
    + So the two shock velocities are the same
    + So, in order for them both to be supersonic, we need
      + M (1 - \beta) / (1 + \beta)  > 1
      + (1 + \beta) < M (1 - \beta)
      + \beta < (M - 1) / (M + 1)
      + E.g,, with M = 5, we have \beta < 2/3

|     \alpha |    \beta | M |             u |       (1 - u)/u |       (u - \beta)/u |
|-------+------+---+---------------+-----------------+-----------------|
|  0.01 |    0 | 6 |          0.09 |           10.11 |            1.00 |
|   0.1 |    0 | 6 |          0.24 |            3.17 |            1.00 |
|   0.3 |    0 | 6 |          0.35 |            1.86 |            1.00 |
|  1.01 |    0 | 6 |          0.50 |            1.00 |            1.00 |
|   1.5 |    0 | 6 |          0.55 |            0.82 |            1.00 |
|     2 |    0 | 6 |          0.59 |            0.69 |            1.00 |
|   2.5 |    0 | 6 |          0.62 |            0.61 |            1.00 |
|   3.0 |    0 | 6 |          0.64 |            0.56 |            1.00 |
|   7.0 |    0 | 6 |          0.74 |            0.35 |            1.00 |
|  10.0 |    0 | 6 |          0.79 |            0.27 |            1.00 |
| 100.0 |    0 | 6 | (0.98, -0.13) |  (2.8e-3, 0.13) |            1.00 |
|-------+------+---+---------------+-----------------+-----------------|
|  0.01 | 0.25 | 6 |          0.30 |            2.33 |            0.17 |
|   0.1 | 0.25 | 6 |          0.42 |            1.38 |            0.40 |
|  0.25 | 0.25 | 6 |          0.49 |            1.04 |            0.49 |
|  1.01 | 0.25 | 6 |          0.63 |            0.59 |            0.60 |
|   3.0 | 0.25 | 6 |          0.74 |            0.35 |            0.66 |
|  10.0 | 0.25 | 6 |          0.86 |            0.16 |            0.71 |
| 100.0 | 0.25 | 6 | (0.98, -0.15) | (-3.0e-3, 0.15) |   (0.75, -0.04) |
|-------+------+---+---------------+-----------------+-----------------|
|  0.01 |  0.5 | 6 |  (0.48, 0.06) |   (1.05, -0.26) |   (-0.03, 0.13) |
|   0.1 |  0.5 | 6 |          0.59 |            0.69 |            0.15 |
|   0.3 |  0.5 | 6 |          0.66 |            0.52 |            0.24 |
|   0.5 |  0.5 | 6 |          0.70 |            0.43 |            0.29 |
|  1.01 |  0.5 | 6 |          0.75 |            0.33 |            0.33 |
|   2.0 |  0.5 | 6 |          0.81 |            0.23 |            0.38 |
|   3.0 |  0.5 | 6 |          0.84 |            0.19 |            0.40 |
|  10.0 |  0.5 | 6 |          1.00 |            0.00 |            0.50 |
| 100.0 |  0.5 | 6 | (0.98, -0.16) | (-6.1e-3, 0.16) |   (0.50, -0.08) |
|-------+------+---+---------------+-----------------+-----------------|
|  0.01 | 0.75 | 6 |  (0.73, 0.12) |   (0.33, -0.22) | (-3.7e-4, 0.16) |
|   0.1 | 0.75 | 6 |  (0.70, 0.08) |   (0.41, -0.16) |   (-0.06, 0.12) |
|   0.3 | 0.75 | 6 |          0.79 |            0.27 |            0.05 |
|  0.75 | 0.75 | 6 |          0.85 |            0.18 |            0.12 |
|  1.01 | 0.75 | 6 |          0.88 |            0.14 |            0.15 |
|   3.0 | 0.75 | 6 |          0.98 |            0.02 |            0.23 |
|  10.0 | 0.75 | 6 | (1.00, -0.14) |   (-0.02, 0.14) |   (0.26, -0.10) |
| 100.0 | 0.75 | 6 | (0.98, -0.16) | (-6.1e-3, 0.16) |   (0.25, -0.12) |
#+TBLFM: $4=( sqrt($1 (1 - $2)**2 - (1 - $1) ($2**2 - $1) / $3**2)  - ($1 - $2))/(1 - $1) (1 + 1/$3**2);f2::$5=(1 - $4)/$4;f2::$6=($4 - $2)/$4;f2

+ So u is the speed of WS in terms of jet speed
+ 4th column gives inner shock jump in terms of WS speed
+ 5th column gives outer shock jump in terms of WS speed
**** Graph of the velocities versus \alpha

#+begin_src python :results file :return figfile
  import numpy as np
  from matplotlib import pyplot as plt
  import seaborn as sns
  sns.set_color_codes("bright")

  figfile = "shock-velocities.pdf"
  alpha = np.logspace(-1.5, 1.5, 500)
  betas = [0.0, 0.25, 0.50, 0.75]

  VWS = 65.0                      # Velocity of working surface
  CS = 13.7                       # Adiabatic sound speed
  GAMMA = 5./3.

  fig, [axu, axi, axo] = plt.subplots(
      3,
      1,
      sharex=True,
      figsize=(4, 5),
  )

  styles = [
      dict(lw=0.7, color=(0.2, 0.1, 0.05), alpha=1.0),
      dict(lw=1.0, color=(0.5, 0.3, 0.1), alpha=1.0),
      dict(lw=1.4, color=(0.7, 0.45, 0.15), alpha=1.0),
      dict(lw=2.0, color=(0.8, 0.5, 0.2), alpha=1.0),
  ]
  # isothermal Mach number
  M = np.sqrt(GAMMA)*VWS/CS

  # Example models to plot
  # Structure [ [ALPHA, BETA, COLOR], ... ]
  examples = [
      [7.0, 0.0, "c"],
      [1.5, 0.0, "b"],
      [0.5, 0.5, "r"],
  ]

  def ufunc(alpha):
      "Calculate V_ws / V_jet"
      return (np.sqrt(alpha*(1 - beta)**2 - (1 - alpha)*(beta**2 - alpha)/M**2)
              - (alpha - beta)) / ((1 - alpha) * (1 + 1.0/M**2))

  def Vifunc(u):
      "Velocity of (inward-facing) jet shock"
      return VWS*(1 - u)/u

  def Vofunc(u):
      "Velocity of (outward-facing) bow shock"
      return VWS*(u - beta)/u

  for beta, style in zip(betas, styles):
      # u = ((1 - beta)*np.sqrt(alpha) - (alpha - beta)) / (1 - alpha)
      u = ufunc(alpha)
      Vi = Vifunc(u)
      Vo = Vofunc(u)
      m = u <= 1.0
      axu.plot(alpha[m], u[m], **style)
      m = Vi > -CS
      axi.plot(alpha[m], Vi[m], zorder=-1, label=fr"$\beta = {beta:.2f}$", **style)
      m = Vo > -CS
      axo.plot(alpha[m], Vo[m], zorder=-1, **style)

  for alpha, beta, color in examples:
      u = ufunc(alpha)
      Vi = Vifunc(u)
      Vo = Vofunc(u)
      axu.plot(alpha, u,  "o", color=color, mec="k")
      axi.plot(alpha, Vi, "o", color=color, mec="k")
      axo.plot(alpha, Vo, "o", color=color, mec="k")

  for ax in axo, axi:
      ax.axhspan(0.0, CS, color="0.8", alpha=0.8, zorder=0)
      ax.axhline(CS, lw=0.7, ls="-", color="k", zorder=100)
  fig.legend(
      ncol=2,
      loc="upper right",
      bbox_to_anchor=(0.98, 0.72),
      fontsize="small",
  ).set_title(
      "Velocity ratio: " + r"$\beta = V_\mathrm{env}\, / \,V_\mathrm{jet}$",
  )

  axo.set(
      xscale="log",
      xlabel=r"Density ratio: $\alpha = \rho_{\mathrm{jet}} \, / \, \rho_{\mathrm{env}}$",
      ylabel=r"$V_\mathrm{s1}$, km / s",
      ylim=[0, 80],
  )
  axi.set(
      ylabel=r"$V_\mathrm{s2}$, km / s",
      ylim=[0, 200],
  )
  axu.set(
      ylabel=r"$u = V_\mathrm{WS} \, / \, V_\mathrm{jet}$",
      ylim=[0, None],
  )

  sns.despine()
  fig.tight_layout()
  fig.savefig(figfile)


#+end_src

#+RESULTS:
[[file:shock-velocities.pdf]]
*** Global run of velocity, density through the two working surfaces

#+begin_src python :results file :return figfile
  import numpy as np
  from matplotlib import pyplot as plt
  from matplotlib.ticker import MultipleLocator
  import seaborn as sns
  sns.set_color_codes("bright")

  figfile = "hh529-ii-iii-ws-profiles.pdf"


  # Velocities in km/s
  Vws_II, Vws_III = 60.0, 70.0
  Vjet_II, Vjet_III = 93, 127
  Venv_II, Venv_III = 46.5, 0.0
  Vs1_II, Vs1_III = Vws_II - Venv_II, Vws_III - Venv_III
  Vs2_II, Vs2_III = Vjet_II - Vws_II, Vjet_III - Vws_III

  # Velocity at inner edge
  Vedge = 50.0

  # Adiabatic and isothermal sound speeds
  asound = 13.7
  gamma = 5.0/3.0
  csound = asound/np.sqrt(gamma)

  # radii in mpc (2 mpc ≈ 1 arcsec)
  Rjet_II, Rjet_III = 2.0, 2.0
  Rbow_II, Rbow_III = 2.0, 4.0

  
  # equilibrium shell thicknesses in arcsec
  H0 = 0.5 * np.sqrt(np.e) # From Eq 4.2 of Falle & Raga 1993MNRAS.261..573F
  H1_II = H0 * Rbow_II * csound / Vs1_II
  H2_II = H0 * Rjet_II * csound / Vs2_II
  H1_III = H0 * Rbow_III * csound / Vs1_III
  H2_III = H0 * Rjet_III * csound / Vs2_III


  # Positions along axis in arcsec

  # Plot limits 
  zmin, zmax = -18.0, 2.0
  # Positions of working surfaces
  z_II, z_III = -12.0, 0.0
  # positions of shocks
  z1_II, z2_II = z_II + H1_II, z_II - H2_II
  z1_III, z2_III = z_III + H1_III, z_III - H2_III

  # Densities in pcc
  dws_II, dws_III = 1e4, 3e4
  djet_II, djet_III = 1500, 1000
  denv_II, denv_III = 3000, 670

  # Array of positions, velocities, densities
  z = np.linspace(zmin, zmax, 1000)
  V = np.empty_like(z)
  d = np.empty_like(z)

  # Fill in all the regions

  # First jet section
  m = (z <= z2_II)
  # Linear velocity profile up to Vjet_II
  V[m] = Vedge + (Vjet_II - Vedge) * (z[m] - zmin) / (z2_II - zmin)
  d[m] = djet_II * Vjet_II / V[m]

  # Working surface II
  m = (z > z2_II) & (z <= z1_II)
  V[m] = Vws_II
  d[m] = dws_II

  # Second jet section
  m = (z >= z1_II) & (z < z2_III)
  # Linear profile from Venv_II to Vjet_III
  V[m] = Venv_II + (Vjet_III - Venv_II) * (z[m] - z1_II) / (z2_III - z1_II)
  d[m] = denv_II * Venv_II / V[m]

  # Working surface III
  m = (z > z2_III) & (z <= z1_III)
  V[m] = Vws_III
  d[m] = dws_III

  # Undisturbed environment
  m = (z > z1_III)
  V[m] = 0.0
  d[m] = denv_III

  sns.set_color_codes()
  fig, [axV, axd] = plt.subplots(2, 1, figsize=(6, 4), sharex=True)

  axV.plot(z, V, lw=2, color="r")
  axd.plot(z, d, lw=2, color="c")
  axd.set(
      yscale="log",
      xlabel="Distance along jet axis, mpc",
      ylabel="Electron density, cm$^{-3}$",
  )
  #axd.tick_params(labelbottom=False) 
  axV.set(ylabel="Velocity, km s$^{-1}$")
  for ax in axV, axd:
      ax.axvspan(z2_II, z1_II, color="k", alpha=0.1, ec=None)
      ax.axvspan(z2_III, z1_III, color="k", alpha=0.1, ec=None)
      ax.axvline(z_II, color="k", lw=0.5)
      ax.axvline(z_III, color="k", lw=0.5)
  axd.text(z_II, 4e4, "HH 529 II", ha="center")
  axd.text(z_III, 4e4, "HH 529 III", ha="center")
  axd.text(zmin + 2.0, 1e4, "⟵ to jet source\nat $-120$ mpc", ha="center")
  axd.xaxis.set_major_locator(MultipleLocator(5.0))
  axd.minorticks_on()

  sns.despine()
  fig.tight_layout()
  fig.savefig(figfile)
#+end_src

#+RESULTS:
[[file:hh529-ii-iii-ws-profiles.pdf]]
*** Estimating the cooling length
+ P_1 = 2 n_1 k T_1
  + Better P = \rho c^2 / \gamma
  + \rho = n \mu m_H
  + c^2 = \gamma k T / \mu m_H
  + => P = n \mu m_H \gamma k T / \mu m_H \gamma = n k T
    + where n = n_e + n_i
  + Or P = \rho k T / \mu m_H (this is what we use)
+ T_1 = 1/16 (5 M^2 - 1) (1 + 3/M^2) T_0
+ n_1 V_1 = n_0 V_0 = n_0 M c_s
+ n_1 / n_0 = 4 M^2 / (M^2 + 3)
+ Put M = 1 + x
  + M^2 = 1 + 2 x
  + M^-2 = 1 - 2 x
  + 5 M^2 - 1 = 4 + 10 x
  + 1 + 3 M^-2 = 4 - 6 x
+ T_1/T_0 = 1/16 (4 + 10 x) (4 - 6 x) = 1/16 (16 + 14 x) = (1 + 7/8 x)
  + So this implies (T_1/T_0) ~ M^{7/8
  + T_1 - T_0 = 7/8 x T_0
+ n_1 / n_0 = (4 + 8 x) / (4 + 2 x) = (1 + 2 x) (1 - 1/2 x) = 1 + 3/2 x
  + Implying n_1/n_0 \sim M^{3/2}
+ net \Lambda = \Lambda_0 (T_1/T_0)^a - (T_1/T_0)^b
  + (T_1/T_0)^a = 1 + 7a/8 x
  + (T_1/T_0)^b = 1 + 7b/8 x
  + \Lambda = \Lambda_0 7(a-b)/8 x
  + From the bow shock paper, we have a = 2.3, b = -0.5
    + 7(a-b)/8 = 2.45
+ Remember though that we need to normalize to n_2 (not to n_0)
  + n_2 = \gamma M^2 n_0
  + n_0 = n_2 / \gamma M^2
+ d = 3 n_1 V_1 k (T_1 - T_0) / n_1^2 \Lambda
  + 3 M c_0 k M^{7/8} (T_1 - T_0) / M^3 n_0 \Lambda_0 2.45 (M - 1)
  + 1.22 (5/3) (c_0 k T_0 / n_2 \Lambda_0) M^{} M^2 (7/8) x / M^3 x
  + 1.78 (c_0 k T_0 / n_2 \Lambda_0)
  + Where the number is actually 3 (5/3) / (a - b) = 5/(a - b) = 5/2.8
+ Using the \mu's we find that it is
  + 5/(a - b) (\mu_i / \mu) (c_0 k T_0 / n_2 \Lambda_0)
  + where n_2 = \rho_2 / \mu_e m_H is the electron density in the equilibrium shell
  + Values
    + n_2 = 1e4
    + 5/(a - b) = 5/2.8
    + (\mu_i / \mu) = 2
    + c_0 = 13.7 km/s
    + T_0 = 8480 K
    + \Lambda_0 = 2.5e-24
  + Result:
    + 2.291e+14 = 0.074 mpc
** Magnetic field - Alfven speed versus sound speed

*** Talk about how H II regions are thermally dominated
+ Low Alfvén speed, compared with sound speed 
+ Need to consider jet shock (Mach disk) and H II region shock (bow shock) separately
  + Although if we are at an internal working surface, then this might not be an important distinction 
